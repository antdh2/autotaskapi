"""
Django settings for autotask project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%_*+go01-jr&(+)3rl1tt8j3d#11prafeqji=c4lo1o+c417rq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'autotask_api_app',
    'autotask_web_app',
    'account',
    'djstripe',
]

# For Stripe
SITE_ID = 1
STRIPE_PUBLIC_KEY = os.environ.get("STRIPE_PUBLIC_KEY", "pk_test_XCZPToZADM1m3WEJOKPGYx70")
STRIPE_SECRET_KEY = os.environ.get("STRIPE_SECRET_KEY", "sk_test_Dke5jy8Q1n4uNY88H8x0X7vE")
DJSTRIPE_INVOICE_FROM_EMAIL = "info@studiointhecloud.co.uk"

DJSTRIPE_PLANS = {
    "bronze": {
        "stripe_plan_id": "bronze",
        "name": "Bronze",
        "description": "Basic frontend input validation",
        "price": 5,  # £5.00
        "webprice": 5,
        "currency": "gbp",
        "interval": "month",
        "feature1": "Frontend validation",
        "feature1icon": "fa fa-check-circle-o",
        "feature2": "Tickets",
        "feature2icon": "icon-docs",
    },
    "silver": {
        "stripe_plan_id": "silver",
        "name": "Silver",
        "description": "Advanced and customisable backend input validation",
        "price": 1000,  # £10.00
        "webprice": 10,
        "currency": "gbp",
        "interval": "month",
        "feature1": "Frontend validation",
        "feature1icon": "fa fa-check-circle-o",
        "feature2": "Tickets",
        "feature2icon": "icon-docs",
        "feature3": "Opportunities",
        "feature3icon": "fa fa-tachometer",
        "feature4": "Time Entries",
        "feature4icon": "fa fa-clock-o",
    },
    "gold": {
        "stripe_plan_id": "gold",
        "name": "Gold",
        "description": "Extended input validation",
        "price": 1500,  # £15.00
        "webprice": 15,
        "currency": "gbp",
        "interval": "month",
        "feature1": "Frontend validation",
        "feature1icon": "fa fa-check-circle-o",
        "feature2": "Backend validation",
        "feature2icon": "fa fa-check-square-o",
        "feature3": "Tickets",
        "feature3icon": "icon-docs",
        "feature4": "Opportunities",
        "feature4icon": "fa fa-tachometer",
        "feature5": "Time Entries",
        "feature5icon": "fa fa-clock-o",
    },
}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'account.middleware.LocaleMiddleware',
    'account.middleware.TimezoneMiddleware',
]

ROOT_URLCONF = 'autotask.urls'

AUTHENTICATION_BACKENDS = (
    'account.auth_backends.EmailAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
    )

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'account.context_processors.account',
            ],
        },
    },
]

WSGI_APPLICATION = 'autotask.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

ACCOUNT_EMAIL_UNIQUE = True


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# To server static files on heroku
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
